---
- name: Check if GLPI is already installed
  stat:
    path: "{{ glpi_install_path }}/glpi"
  register: glpiinstalled

- name: Download and extract GLPI and configure inc/downstream.php file
  when: glpi_update or not glpiinstalled.stat.exists
  block:

    - name: Remove GLPI web files
      file:
        path: "{{ glpi_install_path }}/glpi"
        state: absent

    - name: Download and extract
      unarchive:
        src: "{{ glpi_download_url }}"
        remote_src: true
        dest: "{{ glpi_install_path }}"
        validate_certs: false
        owner: "{{ glpi_download_owner }}"
        group: "{{ glpi_download_group }}"

    - name: Configure inc/downstream.php file
      template:
        src: "inc/downstream.php.j2"
        dest: "{{ glpi_install_path }}/glpi/inc/downstream.php"
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
        mode: 0644

- name: Configuring files and directories locations
  when: ( not glpiinstalled.stat.exists )
  block:

    - name: 'Create config directories'
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
        mode: 0755
      loop:
        - '{{ glpi_var_dir }}'
        - '{{ glpi_log_dir }}'
        - '{{ glpi_config_dir }}'
        - '{{ glpi_marketplace_dir }}'

    - name: 'Configure {{ glpi_config_dir }}local_define.php file'
      template:
        src: "etc/glpi/local_define.php.j2"
        dest: "{{ glpi_config_dir }}/local_define.php"
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
        mode: 0644

    - name: 'Copy config and files directories to config location'
      copy:
        src: "{{ glpi_install_path }}/glpi/{{ item.src }}/"
        dest: "{{ item.dest }}/"
        remote_src: true
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
        mode: preserve
      loop:
        - {src: config, dest: "{{ glpi_config_dir }}"}
        - {src: files, dest: "{{ glpi_var_dir }}"}

    - name: 'Remove config and files directories from default location'
      file:
        path: "{{ glpi_install_path }}/glpi/{{ item }}"
        state: absent
      loop:
        - config
        - files

- name: Automatic update
  when: glpi_update
  command: "php bin/console db:update --no-telemetry --no-interaction"
  args:
    chdir: "{{ glpi_install_path }}/glpi"
  notify:
    - Remove install.php
    - Add htaccess

- name: Automatic installation
  command: "php bin/console -n db:install -H {{ glpi_db_host }} -P {{ glpi_db_port }} -d {{ glpi_db_name }} -u {{ glpi_db_user }} -p {{ glpi_db_password }}"
  args:
    chdir: "{{ glpi_install_path }}/glpi"
  notify:
    - Remove install.php
    - Add htaccess
  when: ( not glpiinstalled.stat.exists ) and glpi_auto_install

- name: Fix permissions in log files
  file:
    path: "{{ glpi_log_dir }}"
    state: directory
    recurse: true
    owner: "{{ glpi_web_owner }}"
    group: "{{ glpi_web_group }}"

- name: GLPI plugins support
  when: glpi_plugins is defined
  block:

    - name: Download and unarchive plugins
      unarchive:
        src: "{{ item.src }}"
        dest: "{{ glpi_install_path }}/glpi/plugins"
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
        remote_src: true
      with_items: "{{ glpi_plugins }}"

    - name: Install plugins
      command: "php bin/console glpi:plugin:install {{ item.name }} -u {{ glpi_api_user }} --force"
      args:
        chdir: "{{ glpi_install_path }}/glpi"
      with_items: "{{ glpi_plugins }}"

    - name: Activate plugins
      command: "php bin/console glpi:plugin:activate {{ item.name }}"
      args:
        chdir: "{{ glpi_install_path }}/glpi"
      with_items: "{{ glpi_plugins }}"

    - name: "Fix permissions in {{ glpi_var_dir }}_plugins directory"
      file:
        path: "{{ glpi_var_dir }}/_plugins"
        state: directory
        recurse: true
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
